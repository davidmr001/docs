<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.1.1 r1855137">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="reserve-order-test-plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Scenario 1" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${THREADS}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1373789594000</longProp>
        <longProp name="ThreadGroup.end_time">1373789594000</longProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">${DURATION}</stringProp>
        <stringProp name="ThreadGroup.delay">0</stringProp>
      </ThreadGroup>
      <hashTree>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${HOST}</stringProp>
          <stringProp name="HTTPSampler.port">8082</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="TestPlan.comments">]</stringProp>
          <stringProp name="HTTPSampler.concurrentPool">4</stringProp>
          <stringProp name="HTTPSampler.connect_timeout">5000</stringProp>
          <stringProp name="HTTPSampler.response_timeout">30000</stringProp>
        </ConfigTestElement>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="reserve-order" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;productList&quot;: [&#xd;
        {&#xd;
            &quot;id&quot;: 552,&#xd;
            &quot;profileId&quot;: 801,&#xd;
            &quot;name&quot;: &quot;qjwnrn&quot;,&#xd;
            &quot;selectedOptions&quot;: [&#xd;
                {&#xd;
                    &quot;title&quot;: &quot;mjkuocln&quot;,&#xd;
                    &quot;options&quot;: [&#xd;
                        {&#xd;
                            &quot;optionValue&quot;: &quot;xdahadjg&quot;&#xd;
                        }&#xd;
                    ]&#xd;
                },&#xd;
                {&#xd;
                    &quot;title&quot;: &quot;paeum&quot;,&#xd;
                    &quot;options&quot;: [&#xd;
                        {&#xd;
                            &quot;optionValue&quot;: &quot;jsbxic&quot;&#xd;
                        }&#xd;
                    ]&#xd;
                },&#xd;
                {&#xd;
                    &quot;title&quot;: &quot;Qty&quot;,&#xd;
                    &quot;options&quot;: [&#xd;
                        {&#xd;
                            &quot;optionValue&quot;: &quot;1&quot;&#xd;
                        }&#xd;
                    ]&#xd;
                }&#xd;
            ],&#xd;
            &quot;finalPrice&quot;: &quot;0.21&quot;,&#xd;
            &quot;imageUrlSmall&quot;: &quot;2&quot;,&#xd;
            &quot;productId&quot;: &quot;1882&quot;&#xd;
        }&#xd;
    ],&#xd;
    &quot;address&quot;: {&#xd;
        &quot;id&quot;: 501,&#xd;
        &quot;profileId&quot;: 801,&#xd;
        &quot;fullName&quot;: &quot;test user&quot;,&#xd;
        &quot;line1&quot;: &quot;aslkjf&quot;,&#xd;
        &quot;line2&quot;: &quot;asldfj&quot;,&#xd;
        &quot;postalCode&quot;: &quot;sadlkjf&quot;,&#xd;
        &quot;phoneNumber&quot;: &quot;sldkjf&quot;,&#xd;
        &quot;city&quot;: &quot;saldkfj&quot;,&#xd;
        &quot;province&quot;: &quot;ontario&quot;,&#xd;
        &quot;country&quot;: &quot;Canada&quot;&#xd;
    },&#xd;
    &quot;paymentType&quot;: &quot;wechat_pay&quot;,&#xd;
    &quot;paymentStatus&quot;: &quot;unpaid&quot;,&#xd;
    &quot;paymentAmt&quot;: &quot;0.21&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/profiles/801/orders</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <ResultCollector guiclass="StatGraphVisualizer" testclass="ResultCollector" testname="Aggregate Graph" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="HOST" elementType="Argument">
              <stringProp name="Argument.name">HOST</stringProp>
              <stringProp name="Argument.value">${__P(host,localhost)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="THREADS" elementType="Argument">
              <stringProp name="Argument.name">THREADS</stringProp>
              <stringProp name="Argument.value">${__P(threads,1)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="DURATION" elementType="Argument">
              <stringProp name="Argument.name">DURATION</stringProp>
              <stringProp name="Argument.value">${__P(duration,5)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <ResultCollector guiclass="GraphVisualizer" testclass="ResultCollector" testname="Graph Results" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Authorization</stringProp>
              <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOiIwIiwiYXVkIjpbInByb2R1Y3QiLCJ1c2VyLXByb2ZpbGUiLCJsaWdodC1zdG9yZSJdLCJ1c2VyX25hbWUiOm51bGwsInNjb3BlIjpbInRydXN0Il0sImV4cCI6MTU4NjY0ODM3NCwiaWF0IjoxNTg2NjQ3MTc0LCJhdXRob3JpdGllcyI6WyJST0xFX1JPT1QiLCJST0xFX0FETUlOIiwiUk9MRV9VU0VSIl0sImp0aSI6ImU2NjRkZmY4LWRkZWMtNDQ4ZS1iMGYzLTZlYzVmZGZlNDRjYSIsImNsaWVudF9pZCI6Im9iai1tYXJrZXQifQ.VX0JlCH6njeqwaJpCna_6R6JoXHN_OVNbRYKNwLrVfYvIibSaAcHHXLeivCzt2xFOLNAqtfJT0cO7C3svygYd4iV9X5dnL87LcxtfyL65xtNjb4bnFitxxrKPrlhJ3M4kN1mTwk_0Nl5-jVu8scrRhXZYqDhp2CQupzbvEa9YAd4Z8-_ZQV5BWO_fhAdFAzuoRT5eK0LYDp3SJtsyUt4Gz6DrTyDG2L-osc5W0SLCx4Pehpc3FCyPF6SBEKROiR9K2xmY2EjftYBO0yfPq_f7GRbbx356EP5C1GUo9sRITN60yYWc2ewErGDHfBHTJiQlQsYc5nnHRiAvLi5L4qZLQ</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
